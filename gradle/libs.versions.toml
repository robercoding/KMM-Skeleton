[versions]
agp = "8.8.2"
android-compileSdk = "35"
android-minSdk = "30"
android-targetSdk = "35"
kotlin = "2.1.20"
ksp = "2.1.20-1.0.32" # Upgrade with kotlin version https://github.com/google/ksp/releases

androidx-activityCompose = "1.9.1"
androidx-navigationCompose = "2.9.0-alpha17"
androidx-lifecycle = "2.8.4"
androidx-credential = "1.3.0"
androidx-viewmodelCompose = "2.8.5"
androidxStartupRuntime = "1.1.1"
#jetbrains-androidx-navigation-compose = "2.8.0-alpha11"
jetbrains-androidx-navigation-compose = "2.9.0-alpha17"
material3Android = "1.4.0-alpha06"

room = "2.7.0-alpha12"
sqlite = "2.5.0-alpha12"

compose-plugin = "1.8.0-rc01"
coil = "3.2.0-rc02"
junit = "4.13.2"
kotlinx-datetime = "0.6.1"
koin = "4.1.0-Beta8" # Upgrade with kotlin version https://mvnrepository.com/artifact/io.insert-koin/koin-bom
ktor = "3.0.3"
touchlabKermit = "2.0.4"
generativeai-google = "0.9.0-1.1.0"
kotestVersion = "5.7.2"
konnectivity = "0.1-alpha01"
kotlinx-coroutines = "1.10.2"
google-firebase-crashlyticsPlugin = "3.0.2"
google-servicesPlugin = "4.4.2"

google-identityId = "1.1.1"
gitlive-firebase = "2.1.0"
kmpAuth = "2.3.1"

krop = "0.1.6"

moko-resources = "0.24.5"
moko-permissions = "0.19.1"

[libraries]
pluginAndroidGradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-pluginGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }

androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigationCompose" }
androidx-datastore = { module = "androidx.datastore:datastore", version = "1.1.0" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version = "1.1.0" }
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "androidx-credential" }
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version = "1.0.1" }
androidx-credentials-playServicesAuth = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "androidx-credential" }

jetbrains-androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "jetbrains-androidx-navigation-compose" }
jetbrains-compose-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "compose-plugin" }

room-runtime-android = { group = "androidx.room", name = "room-runtime-android", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
sqlite-bundled = { module= "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

androidx-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-viewmodelCompose" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-compose-core = { module = "io.coil-kt.coil3:coil-compose-core", version.ref = "coil" }
coil-mp = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Android specific.
#coil-network-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
#coil-network =  { module = "io.coil-kt:coil-network", version.ref = "coil" }
#coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }


# Coroutines
#kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" } # Compose Base API
koin-compose-viewModel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" } # Compose ViewModel (koinViewModel)

# Ktor
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor"}


# KMM specific
#kmp-observable-viewmodel = { module = "com.rickclephas.kmp:kmp-observableviewmodel-core", version.ref = "kmpObservableViewmodel" }
touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "touchlabKermit" }
slf4j-simple = { group = "org.slf4j", name = "slf4j-simple", version = "2.0.16" } # Needed for ktor client logging

# Moko
moko-resources = { module = "dev.icerock.moko:resources", version.ref = "moko-resources" }
moko-resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "moko-resources" }
moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "moko-permissions" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko-permissions" }
moko-permissions-camera = { module = "dev.icerock.moko:permissions-camera", version.ref = "moko-permissions" }

# Kotlin
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# Kotest
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotestVersion" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotestVersion" }

google-firebase-BoM = { module = "com.google.firebase:firebase-bom", version = "33.6.0" }
google-firebase-analytics = { module = "com.google.firebase:firebase-analytics"}
google-firebase-authentication = { module = "com.google.firebase:firebase-auth"}
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics"}
google-firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx"}
google-firebase-storage ={ module = "com.google.firebase:firebase-storage"}
google-firebase-config = { module = "com.google.firebase:firebase-config"}

gitlive-firebase-analytics =  { module = "dev.gitlive:firebase-analytics", version.ref = "gitlive-firebase" }
gitlive-firebase-auth =  { module = "dev.gitlive:firebase-auth", version.ref = "gitlive-firebase" }
gitlive-firebase-common =  { module = "dev.gitlive:firebase-common", version.ref = "gitlive-firebase" }
gitlive-firebase-crashlytics =  { module = "dev.gitlive:firebase-crashlytics", version.ref = "gitlive-firebase" }
gitlive-firebase-firestore =  { module = "dev.gitlive:firebase-firestore", version.ref = "gitlive-firebase" }
gitlive-firebase-config =  { module = "dev.gitlive:firebase-config", version.ref = "gitlive-firebase" }
gitlive-firebase-storage =  { module = "dev.gitlive:firebase-storage", version.ref = "gitlive-firebase" }

#Google Sign In
google-identityId = { module = "com.google.android.libraries.identity.googleid:googleid", version.ref = "google-identityId" }
kmpAuth-googleSignIn = { module = "io.github.mirzemehdi:kmpauth-google", version.ref = "kmpAuth" }
kmpAuth-firebase = { module = "io.github.mirzemehdi:kmpauth-firebase", version.ref = "kmpAuth" }
kmpAuth-uiHelper = { module = "io.github.mirzemehdi:kmpauth-uihelper", version.ref = "kmpAuth" }

krop = { module = "com.attafitamim.krop:ui", version.ref = "krop" }
konnecitvity = { module = "com.plusmobileapps:konnectivity", version.ref = "konnectivity" }

androidx-startup-runtime = { group = "androidx.startup", name = "startup-runtime", version.ref = "androidxStartupRuntime" }

[bundles]
google-firebase = [
    "google-firebase-analytics",
    "google-firebase-authentication",
    "google-firebase-crashlytics",
    "google-firebase-firestore-ktx",
    "google-firebase-storage",
    "google-firebase-config"
]

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }

room = { id = "androidx.room", version.ref = "room" }

kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }

googleServices = { id = "com.google.gms.google-services", version.ref = "google-servicesPlugin" }
googleFirebaseCrashlytics = { id = "com.google.firebase.crashlytics", version.ref = "google-firebase-crashlyticsPlugin" }

icerockMultiplatformResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
icerockMokoResourcesGenerator = { id = "dev.icerock.moko.resources.generator", version.ref = "moko-resources" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version = "0.17.1" }